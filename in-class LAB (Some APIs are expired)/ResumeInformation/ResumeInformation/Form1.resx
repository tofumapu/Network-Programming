<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYa
        HSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAEtANgDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwCtRRRX3B8gFFFFABRRRQAUUUUAFJS02gBaKSigAooooAWgUUUA
        LRRRQAhpaSloAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAptOqOR1jQs7BVUZJJwAKL2Ad
        TXkSMEyOqj1JxXJ3/igyXDx2WBCvHmsOWPtWHLd3FzOVeV2OfvMDg/QV5dfNKdN8sFc9Ojlk6i5pux37
        ajZgZ+0R49Qc1A2uacjbWukzXCyIwYGVyPQHk/5/zmqd1ZHzMyuyei55/IdK4nm9XpFHYsqp21bPSF1r
        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
</value>
  </data>
</root>